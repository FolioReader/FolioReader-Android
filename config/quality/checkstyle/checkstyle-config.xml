<?xml version="1.0"?><!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">

    <property name="charset" value="UTF-8" />

    <property name="severity" value="error" />

    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>

    <module name="TreeWalker">

        <!-- Imports -->

        <module name="RedundantImport">
            <property name="severity" value="error" />
        </module>

        <module name="AvoidStarImport">
            <property name="severity" value="error" />
        </module>

        <!-- General Code Style -->

        <module name="LineLength">
            <property name="max" value="100" />
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://|^* static" />
        </module>

        <module name="EmptyBlock">
            <property name="option" value="TEXT" />
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
        </module>

        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected" />
        </module>

        <module name="LeftCurly">
            <property name="maxLineLength" value="100" />
        </module>

        <module name="RightCurly">
            <property name="option" value="alone" />
            <property name="tokens"
                value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT" />
        </module>

        <module name="RightCurly">
            <property name="option" value="same" />
        </module>

        <module name="NoFinalizer" />

        <module name="ArrayTypeStyle" />

        <module name="ModifierOrder" />

        <module name="Indentation">
            <property name="basicOffset" value="4" />
            <property name="braceAdjustment" value="0" />
            <property name="caseIndent" value="4" />
            <property name="throwsIndent" value="4" />
            <property name="lineWrappingIndentation" value="8" />
            <property name="arrayInitIndent" value="2" />
        </module>

        <!-- White Space -->

        <module name="GenericWhitespace">
            <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace." />
            <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace." />
            <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace." />
            <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
        </module>

        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true" />
            <property name="allowEmptyMethods" value="false" />
            <property name="allowEmptyTypes" value="false" />
            <property name="allowEmptyLoops" value="false" />
            <message key="ws.notFollowed"
                value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
            <message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
            <property name="severity" value="error" />
        </module>

        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA, SEMI, TYPECAST" />
        </module>

        <module name="NoWhitespaceBefore">
            <property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC" />
            <property name="allowLineBreaks" value="true" />
        </module>

        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
            <property name="allowLineBreaks" value="true" />
        </module>

        <!-- Naming -->

        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
            <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="TypeName">
            <message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF" />
            <property name="format" value="^[a-z][a-zA-Z0-9]*$" />
            <property name="allowOneCharVarInForLoop" value="true" />
            <message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''." />
        </module>

        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''." />
        </module>

    </module>

</module>